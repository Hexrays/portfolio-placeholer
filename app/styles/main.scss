@import 'compass';
@import 'compass/reset';
@import 'compass/css3';

// ************************************************************
// ************************************************************
// Utility
// ************************************************************
// ************************************************************

$BREAKPOINT-XSMALL : 35.5em  !default;  // 35.5em;   = 568px
$BREAKPOINT-SMALL  : 40em    !default;  // 40em;     = 640px
$BREAKPOINT-MEDIUM : 50em    !default;  // 50em;     = 800px
$BREAKPOINT-LARGE  : 64em    !default;  // 64em;     = 1024px
$BREAKPOINT-XLARGE : 82.5em  !default;  // 82.5em;   = 1320px
$BREAKPOINT-FULL   : 63.75em !default;  // 63.75em;  = 1020px

@mixin breakpoint($point, $minmax:max) {
    @if $point == xs {
        @media only screen and (#{$minmax}-width: $BREAKPOINT-XSMALL) { @content; }
    } @else if $point == sm {
        @media only screen and (#{$minmax}-width: $BREAKPOINT-SMALL)  { @content; }
    } @else if $point == md {
        @media only screen and (#{$minmax}-width: $BREAKPOINT-MEDIUM) { @content; }
    } @else if $point == lg {
        @media only screen and (#{$minmax}-width: $BREAKPOINT-LARGE)  { @content; }
    } @else if $point == xl {
        @media only screen and (#{$minmax}-width: $BREAKPOINT-XLARGE) { @content; }
    } @else {
        // Forgive me Jeff, I know I specifically told you to avoid inline, arbitrary
        // breakpoints, but since scale transforms can't be performed percentage-based
        // against window size, I've got to break my own rule.
        @media only screen and (#{$minmax}-width: $point)             { @content; }
    }
}

// ************************************************************
// ************************************************************
// Global
// ************************************************************
// ************************************************************

body {
    margin      : 0;
    width       : 100%;
    background  : yellowgreen;
    color       : #333;
    font-family : "Helvetica Neue", Helvetica, Arial, sans-serif;
}

a {
    text-decoration: none;
    color: #000;
    transition: color 0.25s ease;

    &:hover {
        color : yellowgreen;
    }
}

// ************************************************************
// ************************************************************
// Cube
// ************************************************************
// ************************************************************


.wrap {
    position           : absolute;
    top                : 50%;
    margin             : -150px 0;
    width              : 100%;
    height             : 300px;
    perspective        : 800px;
    perspective-origin : 50% 100px;
}

.cube {
    position        : relative;
    overflow        : visible !important;
    margin          : 0 auto;
    width           : 200px;
    animation       : spin 4s infinite linear;
    transform-style : preserve-3d;
    /*border: 1px solid blue;*/
}

.cube div {
    position         : absolute;
    width            : 200px;
    height           : 200px;
    background-color : rgba(42,222,38,0.25);
    box-shadow       : inset 4px 4px 30px rgba(0,0,0,0.25);
    text-align       : center;
    font-family      : sans-serif;
    line-height      : 200px;
    transition       : background-color 1s ease;

    &:hover {
        background-color : rgba(255,0,38,0.25);
    }
}

.back {
    transform : translateZ(-100px) rotateY(180deg);
}

.right {
    transform        : rotateY(-270deg) translateX(100px);
    transform-origin : top right;
}

.left {
    transform        : rotateY(270deg) translateX(-100px);
    transform-origin : center left;
}

.top {
    transform        : rotateX(-90deg) translateY(-100px);
    transform-origin : top center;
}

.bottom {
    transform        : rotateX(90deg) translateY(100px);
    transform-origin : bottom center;
}

.front {
    transform : translateZ(100px);
}

@keyframes spin {
    from {
        transform : rotateY(0);
    }

    to {
        transform : rotateY(-360deg);
    }
}

// ************************************************************
// ************************************************************
// Footer
// ************************************************************
// ************************************************************

footer {
    position         : fixed;
    bottom           : 0;
    left             : 0;
    width            : 100%;
    height           : 30px;
    background-color : rgba(0,0,0,0.2);
}

.footer-list {
    position : relative;
    display  : flex;
    margin   : 0 auto;
    width    : 50%;
    height   : 100%;

    flex-direction : row;
    flex-wrap      : no-wrap;

    @include breakpoint(xs){
        width : 100%;
    }
}

.footer-item {
    color       : #000;
    text-align  : center;
    line-height : 30px;
    flex-grow   : 1;
}

